{"remainingRequest":"/Users/macbookpro/Documents/Kerjaan/PT MJA/MJA-Vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/Documents/Kerjaan/PT MJA/MJA-Vue/src/views/Master-stokis.vue?vue&type=template&id=791f56e8&","dependencies":[{"path":"/Users/macbookpro/Documents/Kerjaan/PT MJA/MJA-Vue/src/views/Master-stokis.vue","mtime":1622397738272},{"path":"/Users/macbookpro/Documents/Kerjaan/PT MJA/MJA-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/Kerjaan/PT MJA/MJA-Vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/Kerjaan/PT MJA/MJA-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/Kerjaan/PT MJA/MJA-Vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}